subprojects {

    apply plugin: 'maven'
    apply plugin: 'net.researchgate.release'
    
    uploadArchives {
        repositories {
            mavenDeployer {

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: rootProject.hasProperty('ossrhUsername') ? rootProject.ossrhUsername : '', password: rootProject.hasProperty('ossrhPassword') ? rootProject.ossrhPassword : '')
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: ossrhUsername, password: ossrhPassword)
                }

                pom.project {
                    name 'Spring Boot Microservices'
                    packaging 'jar'
                    description 'Spring Boot Microservices'
                    url 'https://github.com/jmnarloch/spring-boot-microservices'

                    scm {
                        connection 'scm:git:https://github.com/jmnarloch/spring-boot-microservices.git'
                        developerConnection 'scm:git:https://github.com/jmnarloch/spring-boot-microservices.git'
                        url 'https://github.com/jmnarloch/spring-boot-microservices.git'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'jmnarloch'
                            name 'Jakub Narloch'
                            email 'jmnarloch@gmail.com'
                        }
                    }
                }
            }
        }
    }

    release {
        tagTemplate = '${version}'

        git {
            requireBranch = 'master'
            pushToRemote = 'origin'
            pushToCurrentBranch = false
        }
    }
    afterReleaseBuild.dependsOn uploadArchives
}